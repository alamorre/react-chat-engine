{"version":3,"sources":["../../src/components/Socket/connect.js","../../src/components/Socket/index.js","../../src/actions/index.js","../../src/components/ChatUi/components/Button/Button.js","../../src/components/ChatUi/components/Input/TextInput.js","../../src/components/ChatUi/ChatList/ChatForm/index.js","../../src/actions/chats/newChat.js","../../src/components/ChatUi/ChatList/index.js","../../src/components/ChatUi/Utilities/dateToString.js","../../src/components/ChatUi/ChatFeed/TitleSection/index.js","../../src/components/ChatUi/ChatFeed/Steps/AuthFail.js","../../src/components/ChatUi/ChatFeed/Steps/Loading.js","../../src/components/ChatUi/ChatFeed/Steps/Welcome.js","../../src/components/ChatUi/ChatFeed/MessageForm/edit.js","../../src/actions/messages/editMessage.js","../../src/components/ChatUi/Utilities/colorMapping.js","../../src/components/ChatUi/components/Avatar/Dot.js","../../src/components/ChatUi/ChatFeed/Message/MyMessage.js","../../src/actions/messages/deleteMessage.js","../../src/components/ChatUi/components/Avatar/index.js","../../src/components/ChatUi/ChatFeed/Message/TheirMessage.js","../../src/components/ChatUi/ChatFeed/Message/index.js","../../src/components/ChatUi/ChatFeed/MessageForm/index.js","../../src/actions/messages/sendMessage.js","../../src/components/ChatUi/ChatFeed/index.js","../../src/components/ChatUi/ChatSettings/TitleForm/index.js","../../src/actions/chats/editChat.js","../../src/components/ChatUi/ChatSettings/People/Person.js","../../src/actions/people/removePerson.js","../../src/components/ChatUi/ChatSettings/People/PersonForm/index.js","../../src/actions/people/addPerson.js","../../src/components/ChatUi/ChatSettings/People/index.js","../../src/components/ChatUi/ChatSettings/index.js","../../src/actions/chats/deleteChat.js","../../src/components/ChatUi/index.js","../../src/actions/chats/getChats.js","../../src/actions/messages/getMessages.js","../../src/components/index.js","../../src/index.js","App.js","index.js"],"names":["connectSocket","props","publicKey","userName","userPassword","development","wsStart","rootHost","console","rws","event","eventJSON","JSON","Socket","state","componentDidMount","this","componentWillUnmount","render","Component","getApiUrl","Button","hovered","value","icon","theme","style","themeStyle","styles","customStyle","hoverStyle","type","onClick","onMouseEnter","onMouseLeave","button","color","border","outline","height","fontSize","cursor","borderRadius","padding","dangerButton","hoverButton","opacity","TextInput","focused","target","defaultStyle","placeholder","onBlur","onFocus","onChange","input","focusInput","MessageForm","handleChange","handleSubmit","data","onNewChat","title","axios","str","headers","response","onSubmit","bind","width","backgroundColor","label","borderColor","textAlign","marginTop","React","ChatList","renderChats","date","extraStyle","chat","key","titleText","messageText","float","position","bottom","Date","sent","chatListContainer","chatsContainer","renderNewChatForm","newChatContainer","creds","maxHeight","overflow","borderRight","chatContainer","fontWeight","paddingBottom","whiteSpace","activeChat","Title","top","zIndex","titleContainer","subtitleText","timeSinceDate","AuthFail","paddingTop","src","alt","paddingLeft","href","Loading","Welcome","MessageEditForm","chatId","messageId","message","text","id","colors","stringToColor","sum","i","stringToNumber","Dot","avatar","setConfiguration","maxScreenClass","Message","selected","renderReads","nextMessage","read","lastMessage","paddingRight","xs","sm","md","deleteMessage","myMessage","Avatar","substring","TheirMessage","marginLeft","sender","theirMessage","cusor","onSend","left","inputContainer","right","renderMessages","keys","Object","messages","lastMessageKey","index","nextMessageKey","componentDidUpdate","el","behavior","chats","_","display","feedContainer","ref","default","Person","onRemovePerson","person","removePerson","username","PersonForm","onAddPerson","marginBottom","renderPeople","people","renderOnePerson","margin","renderTwoPeople","renderThreePeople","topPeople","settingsContainer","borderLeft","gutterWidth","App","onConnect","getChats","onFailAuth","undefined","setActiveChat","getMessages","onGetChats","onEditChat","onDeleteChat","onGetMessages","onNewMessage","onEditMessage","onDeleteMessage","onChatClick","SocketConnector","ChatEngine","users","user","Math","floor","random","length","log","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.56683c38.chunk.js","sourcesContent":["import ReconnectingWebSocket from 'reconnecting-websocket'\n\nexport function connectSocket(props) {    \n  const { publicKey, userName, userPassword, development } = props \n  const wsStart = development ? 'ws://' : 'wss://'\n  const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\n  console.log(`${wsStart}${rootHost}/person/?publicKey=${publicKey}&username=${userName}&secret=${userPassword}`)\n  const rws = new ReconnectingWebSocket(`${wsStart}${rootHost}/person/?publicKey=${publicKey}&username=${userName}&secret=${userPassword}`)\n\n  rws.onopen = function(event) {\n    console.log(\"User socket connect\", event)\n    props.onConnect && props.onConnect(props)\n  }\n\n  rws.onerror = function(event) {\n    console.log(\"User socket error\", event)\n    if(event.message === 'TIMEOUT') {\n      props.onFailAuth && props.onFailAuth(props)\n    }\n  }\n\n  rws.onmessage = function(event) {\n    const eventJSON = JSON.parse(event.data)\n    console.log('action', eventJSON.action)\n\n    if (eventJSON.action === 'new_chat') {\n      props.onNewChat && props.onNewChat(eventJSON.data)\n\n    } else if (eventJSON.action === 'edit_chat') {\n      props.onEditChat && props.onEditChat(eventJSON.data)\n\n    } else if (eventJSON.action === 'delete_chat') {\n      props.onDeleteChat && props.onDeleteChat(eventJSON.data)\n\n    } else if (eventJSON.action === 'add_person') {\n      props.onAddPerson && props.onAddPerson(eventJSON.data)\n\n    } else if (eventJSON.action === 'remove_person') {\n      props.onRemovePerson && props.onRemovePerson(eventJSON.data)\n\n    } else if (eventJSON.action === 'new_message') {\n      props.onNewMessage && props.onNewMessage(eventJSON.data.id, eventJSON.data.messages)\n\n    } else if (eventJSON.action === 'edit_message') {\n      props.onEditMessage && props.onEditMessage(eventJSON.data.id, eventJSON.data.messages)\n\n    } else if (eventJSON.action === 'delete_message') {\n      props.onDeleteMessage && props.onDeleteMessage(eventJSON.data.id, eventJSON.data.messages)\n    }\n  }\n\n  return rws\n}","import React, { Component } from 'react'\n\nimport { connectSocket } from './connect'\n\nexport default class Socket extends Component {\n    state = {\n        rws: null\n    }\n\n    componentDidMount() { \n        if (!this.props.publicKey) {\n            console.log(\"You need an API key. Register for one here: https://chatengine.io\")\n            return;\n        }\n    \n        this.setState({ \n            rws: connectSocket(this.props) \n        })\n    }\n\n    componentWillUnmount(){ \n        this.state.rws.close() \n    }\n\n    render() {\n        return <div />\n    }\n}\n","export function getApiUrl(props) { \n    if (props.development) {\n        return 'http://127.0.0.1:8000'\n    }\n    return 'https://api.chatengine.io'\n}\n","import React, { Component } from 'react'\n\nimport { PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons'\n\nexport default class Button extends Component {\n    state = {\n        hovered: false\n    }\n\n    render() {\n        const { value, icon, theme, style } = this.props\n\n        const themeStyle = theme == 'danger' ? styles.dangerButton : styles.button\n        const customStyle = style ? style : {}\n        const hoverStyle = this.state.hovered ? styles.hoverButton : {}\n\n        return (\n            <button \n                type={this.props.type}\n                onClick={() => this.props.onClick && this.props.onClick()}\n                onMouseEnter={() => this.setState({ hovered: true })}\n                onMouseLeave={() => this.setState({ hovered: false })}\n                style={{ ...themeStyle, ...customStyle, ...hoverStyle }}\n            >\n                \n                { icon == 'plus' && <PlusOutlined /> }\n                { icon == 'send'  && <ArrowUpOutlined /> }\n                { icon == 'delete'  && <DeleteOutlined /> }\n                { icon == 'user-add'  && <UserAddOutlined /> }\n                \n                \n                { value && icon ? ` ${value}` : value}  \n\n            </button>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n        color: 'white',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        borderRadius: '4px',\n        padding: '8px 16px',\n        borderRadius: '24px',\n        backgroundColor: '#1890ff'\n    },\n    dangerButton: {\n        color: 'red',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        borderRadius: '4px',\n        padding: '8px 16px',\n        borderRadius: '24px',\n        backgroundColor: 'white',\n        border: '2px solid red',\n    },\n    hoverButton: {\n        opacity: '0.66'\n    }\n}","import React, { Component } from 'react'\n\nexport default class TextInput extends Component {\n    state = {\n        focused: false,\n        value: null\n    }\n\n    componentDidMount() {\n        const value = this.props.default\n        if(value) {\n            const event = {target: {value}}\n            this.props.handleChange(event)\n            this.setState({ value })\n        }\n    }\n\n    render() {\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = this.state.focused ? styles.focusInput : styles.input\n\n        return (\n            // NOTE: You may need to make a div the searchContainer to put icons in...\n            <input \n                value={this.props.value} \n                placeholder={this.props.label}\n                style={{ ...defaultStyle, ...customStyle }}\n                onBlur={() => this.setState({ focused: false })}\n                onFocus={() => this.setState({ focused: true })}\n                type={this.props.type ? this.props.type : \"text\" }\n                onChange={(e) => this.props.handleChange && this.props.handleChange(e)} \n            />\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        padding: '0px 12px',\n        borderRadius: '4px',\n        borderRadius: '24px',\n        border: '1px solid #d9d9d9',\n    },\n    focusInput: {\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        padding: '0px 12px',\n        borderRadius: '4px',\n        borderRadius: '24px',\n        border: '1px solid #1890ff',\n    }\n}","import React from 'react';\n\nimport { newChat } from 'react-chat-engine'\n\nimport { Button } from '../../components/Button'\nimport { TextInput } from '../../components/Input'\n\nexport default class MessageForm extends React.Component {\n    state = {\n        value: ''\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n\n        newChat(\n            this.props.creds, \n            { title: this.state.value },\n            () => this.setState({ value: '' })\n        )\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit.bind(this)}>\n\n          <div style={{ width: 'calc(100% - 26px)', border: '1px solid #d9d9d9', borderRadius: '24px', backgroundColor: 'white' }}>\n            \n            <div style={{ height: '0px' }}>\n              <TextInput \n                label='New Chat'\n                value={this.state.value}\n                style={{ width: 'calc(100% - 26px - 48px)', borderColor: 'white' }}\n                handleChange={(e) => this.handleChange(e)}\n              />\n            </div>\n\n            <div style={{ width: '100%', textAlign: 'right', marginTop: '1px' }}>\n              <Button \n                icon='plus'\n                type=\"submit\" \n              />\n            </div>\n          \n          </div>\n\n        </form>\n      );\n    }\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function newChat(props, data, onNewChat) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/`,\n        data, \n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {\n        onNewChat && onNewChat(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Chat Error', error)\n    });\n}","import React, { Component } from 'react'\n\nimport _ from 'lodash'\n\nimport { daySinceSent } from '../Utilities/dateToString'\n\nimport ChatForm from './ChatForm'\n\nclass ChatList extends Component {\n\n    renderChats(chats) {\n        return _.map(chats, (chat, index) => {\n            const extraStyle = (chat && this.props.activeChat === chat.id) ? styles.activeChat : {}\n            \n            if (!chat) return <div />\n\n            return (\n                <div \n                    key={`chat_${index}`} \n                    onClick={() => this.props.onChatClick(chat.id)}\n                    style={{ ...styles.chatContainer, ...extraStyle }}\n                >\n                    \n                    <div style={ styles.titleText }>\n                        { chat.title }\n                    </div>\n\n                    <div style={{ width: '100%' }}>\n                        <div style={ styles.messageText }>\n                            { chat.last_message.text ? chat.last_message.text : 'Say hello!' }\n                        </div>\n\n                        <div style={{ ...styles.messageText, ...{ float: 'right', textAlign: 'right', width: '25%', position: 'relative', bottom: '17px' } }}>\n                            { daySinceSent(chat.last_message.created) }\n                        </div>\n                    </div>\n\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div style={styles.chatListContainer}>\n\n                <div style={ styles.chatsContainer }>\n\n                    { this.renderChats(this.props.chats) } \n\n                    <div style={{ height: '64px' }} />\n\n                    {\n                        this.props.renderNewChatForm ?\n                        this.props.renderNewChatForm() :\n                        <div style={ styles.newChatContainer }>\n                            <ChatForm creds={this.props.creds} />\n                        </div>\n                    }\n                    \n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst styles={\n    chatListContainer: { \n        height: '100%', \n        maxHeight: '100vh', \n        overflow: 'scroll', \n        borderRight: '1px solid #afafaf', \n        backgroundColor: 'white' \n    },\n    chatsContainer: { \n        width: '100%', \n        backgroundColor: 'white', \n        borderRadius: '0px 0px 24px 24px'\n    },\n    chatContainer: { \n        padding: '16px', \n        cursor: 'pointer'\n    },\n    titleText: { \n        fontWeight: '500',\n         paddingBottom: '4px', \n         whiteSpace: 'nowrap', \n         overflow: 'hidden' \n    },\n    messageText: {\n        width: '75%',\n        color: 'rgba(153, 153, 153, 1)', \n        fontSize: '14px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden'\n    },\n    activeChat: {\n        backgroundColor: '#d9d9d9',\n        border: '4px solid white',\n        borderRadius: '12px'\n    },\n    newChatContainer: { \n        position: 'absolute', \n        bottom: '0px', \n        width: '100%', \n        padding: '12px', \n    }\n}\n\nexport default ChatList;\n","export function timeSinceDate(date) {\n    const sent = Date(date)\n    const day = sent.substr(0, 10)\n    const time = sent.substr(15, 6)\n    return `${day} at ${time}`\n}\n\nexport function daySinceSent(date) {\n    const sent = Date(date)\n    return sent.substr(4, 6)\n}\n","import React, { Component } from 'react'\n\nimport { timeSinceDate } from '../../Utilities/dateToString'\n\nexport default class Title extends Component {\n  \n    render() {\n        const { chat } = this.props\n\n        if (!chat) { return <div /> }\n\n        return (\n            <div style={{ position: 'absolute', top: '0px', width: '100%', zIndex: '999' }}>\n\n                <div style={ styles.titleContainer }>\n                    \n                    <div style={ styles.titleText }>\n                        { chat && chat.title }\n                    </div>\n                    \n                    <div style={ styles.subtitleText }>\n                        Active { timeSinceDate(chat.last_message.created) }\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    titleContainer: {\n        padding: '18px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n        backgroundColor: 'rgb(256, 256, 256, 0.92)'\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n    subtitleText: {\n        fontSize: '12px',\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class AuthFail extends Component {\n    render() {\n        return (\n            <div style={{ height: '100%', textAlign: 'center' }}>\n                \n                <div style={{ width: '100%' }}>\n                    <img\n                        style={{ width: '40%', paddingTop: '25vh' }}\n                        src='https://chat-engine-assets.s3.amazonaws.com/denied.svg'\n                        alt='welcome-to-chat-engine'\n                    />\n                </div>\n\n                <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\n                    Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at <a href='https://chatengine.io'>chatengine.io</a>\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { LoadingOutlined } from '@ant-design/icons'\n\nexport default class Loading extends Component {\n    render() {\n        return (\n            <LoadingOutlined \n                style={{ \n                    width: '100%', \n                    position: 'relative', \n                    top: 'calc(50vh - 26px)', \n                    textAlign: 'center',\n                    fontSize: '52px'\n                }} \n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Welcome extends Component {\n    render() {\n        return (\n            <div style={{ height: '100%', textAlign: 'center' }}>\n\n                <div style={{ width: '100%' }}>                    \n                    <img\n                        style={{ width: '60%', paddingTop: '33vh' }}\n                        src='https://chat-engine-assets.s3.amazonaws.com/welcome.svg'\n                        alt='welcome-to-chat-engine'\n                    />\n                </div>\n\n                <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\n                    Fill out the \"New Chat\" form to get started.\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nimport { editMessage } from 'react-chat-engine'\n\nimport { Button } from '../../components/Button'\nimport { TextInput } from '../../components/Input'\n\nexport default class MessageEditForm extends React.Component {\n    state = {\n        value: ''\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        \n        editMessage(\n            this.props.creds, \n            this.props.chatId, \n            this.props.message.id,\n            { text: this.state.value }\n        )\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit.bind(this)} id=\"new-msg-form\">\n          \n          <TextInput \n            type=\"text\" \n            label='Edit message...'\n            value={this.state.value} \n            style={{ width: 'calc(100% - 84px)' }}\n            handleChange={this.handleChange.bind(this)} \n          />\n          \n          <Button type=\"submit\" value=\"Edit\" />\n\n        </form>\n      );\n    }\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function editMessage(props, chatId, messageId, data) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        data,\n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {})\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","\n\nconst colors = [\n    '#D64045',\n    '#5B3000',\n    '#00CC99',\n    '#467599',\n    '#1D3354',\n    '#8F250C',\n    '#6153CC',\n    '#961D4E',\n    '#A29F15',\n    '#0CAADC',\n    '#FF5154',\n    '#FA7921',\n    '#688E26',\n    '#550527',\n    '#A10702',\n    '#FF1053',\n    '#6C6EA0',\n    '#100B00',\n]\n\nfunction stringToNumber(str){\n    let sum = 0\n    for (var i = 0; i < str.length; i++) {\n        sum = sum + (str.charCodeAt(i) * i) - 97\n    }\n    return sum\n}\n\nexport function stringToColor(str) {\n    return colors[stringToNumber(str) % colors.length]\n}","import React, { Component } from 'react'\n\nimport { stringToColor } from '../../Utilities/colorMapping' \n\n\nexport default class Dot extends Component {\n\n    render() {\n        const customStyle = this.props.style ? this.props.style : {}\n        const color = stringToColor(this.props.text)\n        \n        return (\n            <div style={{ ...styles.avatar, ...customStyle, ...{ backgroundColor: color } }} />\n        )\n    }\n}\n\nconst styles = {\n    avatar: {\n        width: '10px',\n        height: '10px',\n        borderRadius: '22px',\n        textAlign: 'center',\n    }\n}","import React, { Component } from 'react'\n\nimport MessageEditForm from '../MessageForm/edit'\n\nimport Dot from '../../components/Avatar/Dot'\nimport { Button } from '../../components/Button'\n\nimport { deleteMessage } from 'react-chat-engine'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\nexport default class Message extends Component {\n    state = {\n        selected: false\n    }\n\n    renderReads() {\n        const { message, nextMessage } = this.props\n\n        return message.reads.map((read, index) => {\n            if (!nextMessage) {\n                return <Dot key={`read_${index}`} text={read.person} style={{ float: 'right' }} />\n            }\n        })\n    }\n\n    render() {\n        const { creds, chatId, lastMessage, message, nextMessage } = this.props\n\n        if (!message) { return <div /> }\n\n        const topRightRadius = !lastMessage || lastMessage.sender !== message.sender ? '1.3em' : '0.3em'\n        const bottomRightRadius = !nextMessage || nextMessage.sender !== message.sender ? '1.3em' : '0.3em'\n\n        const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\n        const paddingBottom = !nextMessage || nextMessage.sender !== message.sender ? '12px' : '2px'\n\n        return (\n            <div \n                style={{ width: '100%', float: 'right', paddingBottom }}\n                onMouseEnter={() => this.setState({ selected: true })}\n                onMouseLeave={() => this.setState({ selected: false })}\n            >\n\n                <Row style={{ paddingRight: '2px' }}>\n\n                    <Col xs={1} sm={2} md={3} />\n\n                    <Col xs={11} sm={10} md={9}>\n\n                        <div style={{ ...styles.myMessage, ...{ borderRadius } }}>\n                            { message.text }\n                        </div>\n\n                    </Col>\n\n                    <Col xs={1} sm={2} md={3} />\n\n                    <Col xs={11} sm={10} md={9}>\n\n                        {\n                            this.state.selected &&\n                            <div style={{ width: '100%', height: '44px' }}>\n\n                                <div style={{ width: 'calc(100% - 52px)' }}>\n                                    <MessageEditForm creds={creds} chatId={chatId} message={message} />\n                                </div>\n\n                                <Button\n                                    theme='danger'\n                                    icon='delete'\n                                    style={{ float: 'right', position: 'relative', bottom: '37px' }}\n                                    onClick={() => deleteMessage(creds, chatId, message.id)} \n                                />\n\n                            </div>\n                        }\n\n                    </Col>\n\n                    <Col xs={12}>\n                        { this.renderReads() }\n                    </Col>\n            \n                </Row>\n                \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    myMessage: {\n        color: 'white', \n        cursor: 'pointer',\n        float: 'right',\n        padding: '12px',\n        fontSize: '15px',\n        backgroundColor: 'rgb(24, 144, 255)', \n    }\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function deleteMessage(props, chatId, messageId) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {})\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import React, { Component } from 'react'\n\nimport { stringToColor } from '../../Utilities/colorMapping' \n\n\nexport default class Avatar extends Component {\n\n    render() {\n        const customStyle = this.props.style ? this.props.style : {}\n        const text = this.props.text.substring(0, 2).toUpperCase()\n        const color = stringToColor(this.props.text)\n        \n        return (\n            <div style={{ ...styles.avatar, ...customStyle, ...{ backgroundColor: color } }}>\n                \n                <div style={{ color: 'white', paddingTop: '12px', fontSize: '15px', fontWeight: '600' }}>\n                \n                    { text }\n                \n                </div>\n            \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    avatar: {\n        width: '44px',\n        height: '44px',\n        borderRadius: '22px',\n        color: 'white',\n        textAlign: 'center',\n    }\n}","import React, { Component } from 'react'\n\nimport Dot from '../../components/Avatar/Dot'\nimport Avatar from '../../components/Avatar'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\n\nexport default class TheirMessage extends Component {\n    state = {\n        selected: false\n    }\n\n    renderReads() {\n        const { message, nextMessage } = this.props\n\n        return message.reads.map((read, index) => {\n            if (!nextMessage) {\n                return <Dot key={`read_${index}`} text={read.person} style={{ marginLeft: '48px' }} />\n            }\n        })\n    }\n\n    render() {\n        const { lastMessage, message, nextMessage } = this.props\n\n        if (!message) { return <div /> }\n\n        const topLeftRadius = !lastMessage || lastMessage.sender !== message.sender ? '1.3em' : '0.3em'\n        const bottomLeftRadius = !nextMessage || nextMessage.sender !== message.sender ? '1.3em' : '0.3em'\n\n        const borderRadius = `${topLeftRadius} 1.3em 1.3em ${bottomLeftRadius}`\n        const paddingBottom = !nextMessage || nextMessage.sender !== message.sender ? '12px' : '2px'\n\n        return (\n            <div style={{ width: '100%', paddingBottom }}>\n            \n                <Row style={{ paddingLeft: '2px' }}>\n\n                    <Col xs={11} sm={10} md={9}>\n\n                        <div style={{ height: '0px' }}>\n                            \n                            {\n                                !nextMessage || nextMessage.sender !== message.sender ?\n                                <Avatar text={message.sender} />  :\n                                <div />\n                            }\n\n                        </div>\n\n                        <div style={{ paddingLeft: '48px' }}>\n\n                            <div \n                                style={{ ...styles.theirMessage, ...{ borderRadius } }}\n                                onMouseEnter={() => this.setState({ selected: true })}\n                                onMouseLeave={() => this.setState({ selected: false })}\n                            >\n                                { message.text }\n                            </div>\n                        \n                        </div>\n\n                    </Col>\n\n                    <Col xs={12}>\n                        { this.renderReads() }\n                    </Col>\n                \n                </Row>\n            \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    theirMessage: {\n        cusor: 'auto',\n        color: 'black', \n        float: 'left',\n        padding: '12px',\n        fontSize: '15px',\n        backgroundColor: '#f1f0f0', \n    },\n}","import React, { Component } from 'react'\n\nimport MyMessage from './MyMessage'\nimport TheirMessage from './TheirMessage'\n\nexport default class Message extends Component {\n    state = {\n        selected: false\n    }\n\n    render() {\n        const { creds, chatId, lastMessage, message, nextMessage } = this.props\n\n        if (!message) { return <div /> }\n\n        if(message.sender == creds.userName) {\n            return (\n                <MyMessage \n                    creds={creds} \n                    chatId={chatId} \n                    lastMessage={lastMessage} \n                    message={message} \n                    nextMessage={nextMessage} \n                />\n            )\n            \n        } else {\n            return (\n                <TheirMessage \n                    creds={creds} \n                    chatId={chatId} \n                    lastMessage={lastMessage} \n                    message={message} \n                    nextMessage={nextMessage} \n                />\n            )\n        }   \n    }\n}\n","import React from 'react';\n\nimport { sendMessage } from 'react-chat-engine'\n\nimport { Button } from '../../components/Button'\nimport { TextInput } from '../../components/Input'\n\nexport default class MessageForm extends React.Component {\n    state = {\n      value: ''\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      event.preventDefault();\n\n      sendMessage(\n        this.props.creds, \n        this.props.chatId, \n        { text: this.state.value },\n        () => this.setState({ value: '' })\n      )\n    }\n  \n    render() {\n      return (\n        <div style={{ position: 'absolute', bottom: '12px', width: '90%', left: '5%' }}>\n\n          <form \n            id=\"new-msg-form\"\n            onSubmit={this.handleSubmit.bind(this)} \n          >\n\n            <div style={ styles.inputContainer }>\n\n              <TextInput \n                label='Send a message...' \n                value={this.state.value} \n                handleChange={this.handleChange.bind(this)} \n                style={{ \n                  borderColor: 'white',\n                  width: 'calc(100% - 18px - 56px)',\n                }}\n              />\n\n              <div style={{ float: 'right', position: 'relative', top: '1px', right: '1px' }}>\n                <Button type=\"submit\" icon='send' />\n              </div>\n\n            </div>\n\n          </form>\n          \n        </div>\n      );\n    }\n}\n\nconst styles = {\n  inputContainer: { \n    width: '100%', \n    borderRadius: '24px', \n    backgroundColor: 'white', \n    border: '1px solid rgb(217, 217, 217)'\n  }\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function sendMessage(props, chatId, data, onSend) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        data,\n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {\n        onSend && onSend(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Send Messages Error', error)\n    });\n}","import React, { Component } from 'react'\n\nimport Title from './TitleSection'\nimport { Loading, AuthFail, Welcome } from './Steps'\n\nimport Message from './Message'\nimport MessageForm from './MessageForm'\n\nimport _ from 'lodash'\n\nexport default class ChatList extends Component {\n\n    renderMessages(messages) {\n        const keys = Object.keys(messages)\n\n        return keys.map((key, index) => {\n            const message = messages[key]\n            const lastMessageKey = index == 0 ? null : keys[index - 1]\n            const nextMessageKey = index == keys.length - 1 ? null : keys[index + 1]\n            \n            return (\n                <Message \n                    key={`message_${index}`} \n                    creds={this.props.creds} \n                    chatId={this.props.chatId} \n                    lastMessage={messages[lastMessageKey]}\n                    message={message} \n                    nextMessage={messages[nextMessageKey]}\n                />\n            )\n        })\n    }\n\n    componentDidUpdate(){\n        if(this.el != undefined){\n            this.el.scrollIntoView({ behavior: 'smooth' })\n        }\n    }\n\n    render() {\n        const { messages, chats, creds, chatId } = this.props\n        const chat = chats && chats[chatId] \n\n        if(creds === null) { \n            return <Loading />\n        }\n\n        if(creds === undefined) {\n            return <AuthFail />\n        }\n\n        if(creds && chats !== null && _.isEmpty(chats)) {\n            return <Welcome />\n        }\n\n        return (\n            <div style={{ display: 'flex', maxHeight: '100vh', backgroundColor: '#f0f0f0' }}>\n\n                <Title chat={chat} />\n\n                <div style={ styles.feedContainer }>\n\n                    <div style={{ height: '92px' }} />\n\n                    { this.renderMessages(messages) }\n\n                    <div ref={el => { this.el = el }}/>\n\n                </div>\n\n                <MessageForm chatId={chatId} creds={creds} />\n\n            </div>\n        )\n    }\n}\nconst styles = {\n    feedContainer: { \n        position: 'absolute', \n        top: '0px', \n        height: 'calc(100% - 64px)', \n        width: '100%', \n        overflow: 'scroll',\n        borderRadius: '0px 0px 24px 24px',\n        backgroundColor: 'white'\n    }\n}","import React from 'react';\n\nimport { editChat } from 'react-chat-engine'\n\nimport { TextInput } from '../../components/Input'\n\nexport default class MessageForm extends React.Component {\n    state = {\n        activeChat: null,\n        value: ''\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n\n        editChat(\n            this.props.creds, \n            this.props.chat.id,\n            { title: this.state.value }\n        )\n    }\n\n    // Update on new active chat. TODO: Find more eloquent way perhaps\n    componentDidUpdate() {\n        if(this.props.chat.title !== this.state.value && this.state.activeChat !== this.props.chat.id) {\n            this.setState({ \n                value: this.props.chat.title,\n                activeChat: this.props.chat.id\n            })\n        }\n    }\n  \n    render() {\n        return (\n            <form onSubmit={this.handleSubmit.bind(this)}>\n\n                <TextInput \n                    label=\"Rename this Chat\" \n                    value={this.state.value} \n                    default={this.props.chat.title}\n                    handleChange={this.handleChange.bind(this)} \n                    style={{ \n                        fontSize: '16px',\n                        fontWeight: '600',\n                        textAlign: 'center',\n                        border: '0px solid white',\n                        width: 'calc(100% - 24px)',\n                    }}\n                />\n\n            </form>\n        );\n    }\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function editChat(props, chatId, data) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        data, \n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {})\n    \n    .catch((error) => {\n        console.log('Edit Chat Error', error)\n    });\n}","import React, { Component } from 'react'\n\nimport { removePerson } from 'react-chat-engine'\n\nimport Avatar from '../../components/Avatar'\nimport { Button } from '../../components/Button'\n\nexport default class Person extends Component {\n    state = {\n        selected: false\n    }\n\n    onRemovePerson() {\n        removePerson(\n            this.props.creds,\n            this.props.chat.id,\n            this.props.person.person\n        )\n    }\n\n    render() {\n        const { person, chat, creds } = this.props\n\n        if (!person) { return <div /> }\n\n        return (\n            <div \n                onMouseEnter={() => this.setState({ selected: true })}\n                onMouseLeave={() => this.setState({ selected: false })}\n            >\n\n                <div style={{ padding: '2px', height: '0px' }}>\n                    \n                    <Avatar text={person.person} />\n\n                </div>\n\n                <div style={{ paddingLeft: '52px', height: '44px', position: 'relative', top: '10px', fontSize: '15px' }}>\n\n                    { person.person !== chat.admin ? person.person : `${person.person} (Admin)` }\n\n                </div>\n\n                {\n                    this.state.selected && (creds.userName === chat.admin) && (person.person !== chat.admin) &&\n                    <div style={{ float: 'right', height: '0px', position: 'relative', bottom: '44px'}}>\n\n                        <Button \n                            theme='danger'\n                            icon='delete'\n                            onClick={() => this.onRemovePerson()}\n                        />\n\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n","import axios from 'axios'\nimport * as str from '..'\n\nexport function removePerson(props, chatId, userName) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {})\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import React from 'react';\n\nimport { addPerson } from 'react-chat-engine'\n\nimport { Button } from '../../../components/Button'\nimport { TextInput } from '../../../components/Input'\n\nexport default class PersonForm extends React.Component {\n  state = {\n    value: ''\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    \n    addPerson(\n      this.props.creds,\n      this.props.chat.id,\n      this.state.value,\n      () => this.setState({ value: '' })\n    )\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)} id=\"new-msg-form\">\n\n        <TextInput \n          label='Type a username'\n          value={this.state.value}\n          handleChange={(e) => this.handleChange(e)} \n          style={{ width: 'calc(100% - 24px)', marginBottom: '12px' }}\n        />\n\n        <Button \n          type=\"submit\" \n          value=\"Add Group Member\" \n          icon='user-add'\n          style={{ width: '100%', marginBottom: '12px' }}\n        />\n\n      </form>\n    );\n  }\n}","import axios from 'axios'\nimport * as str from '..'\n\nexport function addPerson(props, chatId, userName, onAddPerson) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {\n        onAddPerson && onAddPerson(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Person Error', error)\n    });\n}","import React from 'react';\n\nimport Person from './Person'\nimport PersonForm from './PersonForm'\n\nexport default class MessageForm extends React.Component {\n\n    renderPeople(people) {\n        return people.map((person, index) => {\n            return (\n                <Person \n                    key={`person_${index}`} \n                    person={person}\n                    creds={this.props.creds} \n                    chat={this.props.chat} \n                />\n            )\n        })\n    }\n  \n    render() {\n        const { creds, chat } = this.props \n\n        if (!chat) { return <div /> }\n\n        return (\n            <div>\n\n                { this.renderPeople(chat.people) }\n\n                <div style={{ height: '12px' }} />\n\n                {\n                    chat.admin === creds.userName &&\n                    <PersonForm creds={creds} chat={chat} />\n                }\n            \n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nimport { deleteChat } from 'react-chat-engine'\n\nimport { Row, Col } from 'react-grid-system'\n\nimport Avatar from '../components/Avatar'\nimport { Button } from '../components/Button'\n\nimport TitleForm from './TitleForm'\nimport People from './People'\n\nexport default class ChatList extends Component {\n\n    renderOnePerson(people) {\n        return (\n            <Col xs={6} style={{ paddingTop: '22px', height: '80px' }}>\n                <div style={{ margin: 'auto', width: '33%' }}>\n                    <Avatar text={people[0].person} />\n                </div>\n            </Col>\n        )\n    }\n\n    renderTwoPeople(people) {\n        return (\n            <Col xs={6} style={{ paddingTop: '22px', height: '80px' }}>\n                <div style={{ margin: 'auto', width: '50%' }}>\n                    <Avatar \n                        text={people[0].person} \n                        style={{ float: 'left', position: 'relative', right: '5px' }}\n                    />\n                    <Avatar \n                        text={people[1].person} \n                        style={{ float: 'right', position: 'relative', left: '5px', bottom: '44px', zIndex: 11 }}\n                    />\n                </div>\n            </Col>\n        )\n    }\n\n    renderThreePeople(people) {\n        return (\n            <Col xs={6} style={{ paddingTop: '22px', height: '80px' }}>\n                <div style={{ margin: 'auto', width: '50%' }}>\n                    <Avatar \n                        text={people[0].person} \n                        style={{ position: 'relative', top: '10px' }}\n                    />\n                    <Avatar text={people[1].person} \n                        style={{ float: 'right', position: 'relative', right: '8px', bottom: '56px', zIndex: 11 }}\n                    />\n                    <Avatar \n                        text={people[2].person} \n                        style={{ float: 'right', position: 'relative', left: '5px', bottom: '78px', zIndex: 11 }}\n                    />\n                </div>\n            </Col>\n        )\n    }\n\n    render() {\n\n        const { chat, creds } = this.props\n        const topPeople = chat ? chat.people.slice(0, 3) : []\n\n        if (!chat) { return <div style={{ display: 'flex', width: '90%', paddingLeft: '5%', borderLeft: '1px solid #afafaf' }} /> }\n        \n        return (\n            <div style={styles.settingsContainer}>\n\n                <div style={{ width: '90%', paddingLeft: '5%' }}>\n\n                    <Row>\n\n                        <Col xs={3} />\n\n                        { topPeople.length == 1 && this.renderOnePerson(topPeople) }\n                        { topPeople.length == 2 && this.renderTwoPeople(topPeople) }\n                        { topPeople.length == 3 && this.renderThreePeople(topPeople) }\n                        \n                        <Col xs={3} />\n\n                    </Row>\n\n                    <TitleForm chat={chat} creds={creds} />\n\n                    <div style={{ fontSize: '17px', padding: '12px', paddingBottom: '0px', fontWeight: '600' }}>\n                        People\n                    </div>\n\n                    <div style={{ height: '12px' }} />\n\n                    <People creds={creds} chat={chat} />\n\n                    {\n                        chat.admin === creds.userName &&\n                        <div>\n\n                            <div style={{ fontSize: '17px', padding: '12px', paddingBottom: '0px', fontWeight: '600' }}>\n                                Options\n                            </div>\n\n                            <div style={{ height: '12px' }} />\n\n                            <Button \n                                value=\"Delete\" \n                                theme='danger'\n                                icon='delete'\n                                onClick={() => deleteChat(creds, chat.id)}\n                                style={{ width: '100%', marginBottom: '12px' }}\n                            />\n\n                        </div>\n                    }\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    settingsContainer: { \n        height: '100%', \n        maxHeight: '100vh', \n        borderLeft: '1px solid #afafaf', \n        backgroundColor: 'white'  \n    }\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function deleteChat(props, chatId) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {})\n    \n    .catch((error) => {\n        console.log('Delete Chat Error', error)\n    });\n}","import React, { Component } from 'react'\n\nimport _ from 'lodash'\n\nimport { getChats } from '../../actions/chats'\nimport { getMessages } from '../../actions/messages'\n\nimport Socket from '../Socket'\n\nimport ChatList from './ChatList'\nimport ChatFeed from './ChatFeed'\nimport ChatSettings from './ChatSettings'\n\nimport { Row, Col } from 'react-grid-system'\n\nimport { setConfiguration } from 'react-grid-system';\n \nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nclass App extends Component {\n  state = {\n    creds: null,\n    chats: null,\n    messages: {},\n    activeChat: null,\n  }\n\n  onConnect(creds) {\n    this.setState({ creds })\n    getChats(creds)\n\n    this.props.onConnect && this.props.onConnect(creds)\n  }\n\n  onFailAuth(creds) {\n    this.setState({ creds: undefined })\n\n    this.props.onFailAuth && this.props.onFailAuth(creds)\n  }\n\n  setActiveChat(chatId) {\n    this.setState({ activeChat: chatId })\n    getMessages(this.state.creds, chatId)\n  }\n\n  onGetChats(chats) {\n    if (chats.length > 0) { this.setActiveChat(chats[0].id) }\n    this.setState({ chats: _.mapKeys(chats, 'id') })\n\n    this.props.onGetChats && this.props.onGetChats(chats)\n  }\n\n  onNewChat(chat) {\n    const { chats } = this.state\n    chats[chat.id] = chat\n    this.setState({ chats, activeChat: chat.id })\n\n    this.props.onNewChat && this.props.onNewChat(chat)\n  }\n\n  onEditChat(chat) {\n    const { chats } = this.state\n    chats[chat.id] = chat\n    this.setState({ chats })\n\n    this.props.onEditChat && this.props.onEditChat(chat)\n  }\n\n  onDeleteChat(chat) {\n    const { chats } = this.state\n    chats[chat.id] = undefined\n    this.setState({ chats })\n\n    this.props.onDeleteChat && this.props.onDeleteChat(chat)\n  }\n\n  onGetMessages(chatId, messages) {\n    this.setState({ messages: _.mapKeys(messages, 'id') })\n    \n    this.props.onGetMessages && this.props.onGetMessages(chatId, messages)\n  }\n\n  onNewMessage(chatId, message) {\n    if (chatId === this.state.activeChat) {\n      const { messages } = this.state\n      messages[message.id] = message\n      this.setState({ messages })\n    }\n\n    this.props.onNewMessage && this.props.onNewMessage(chatId, message)\n  }\n\n  onEditMessage(chatId, message) {\n    if (chatId === this.state.activeChat) {\n      const { messages } = this.state\n      messages[message.id] = message\n      this.setState({ messages })\n    }\n\n    this.props.onEditMessage && this.props.onEditMessage(chatId, message)\n  }\n\n  onDeleteMessage(chatId, message) {\n    if (chatId === this.state.activeChat) {\n      const { messages } = this.state\n      messages[message.id] = undefined\n      this.setState({ messages })\n    }\n\n    this.props.onDeleteMessage && this.props.onDeleteMessage(chatId, message)\n  }\n\n  render() {\n    const { height } = this.props\n\n    return (\n      <div>\n\n        <Socket \n          {...this.props} \n          // API Hooks\n          onConnect={(creds) => this.onConnect(creds)}\n          onFailAuth={(props) => this.onFailAuth(props)}\n          onGetChats={(chats) => this.onGetChats(chats)}\n          onNewChat={(chat) => this.onNewChat(chat)}\n          onEditChat={(chat) => this.onEditChat(chat)}\n          onDeleteChat={(chat) => this.onDeleteChat(chat)}\n          onAddPerson={(chat) => this.onEditChat(chat)}\n          onRemovePerson={(chat) => this.onEditChat(chat)}\n          onGetMessages={(chatId, messages) => this.onGetMessages(chatId, messages)}\n          onNewMessage={(chatId, message) => this.onNewMessage(chatId, message)}\n          onEditMessage={(chatId, message) => this.onEditMessage(chatId, message)}\n          onDeleteMessage={(chatId, message) => this.onDeleteMessage(chatId, message)}\n        />\n\n        <Row>\n\n          <Col sm={3} style={{ height: height ? height : '', overflow: 'scroll' }}>\n            <ChatList \n              creds={this.state.creds} \n              chats={this.state.chats} \n              activeChat={this.state.activeChat}\n              onChatClick={(chatId) => this.setActiveChat(chatId)} \n              renderNewChatForm={this.props.renderNewChatForm}\n            />\n          </Col>\n\n          <Col sm={6} style={{ height: height ? height : '', overflow: 'scroll' }}>\n            <ChatFeed \n              creds={this.state.creds} \n              chats={this.state.chats} \n              chatId={this.state.activeChat} \n              messages={this.state.messages} \n            />\n          </Col>\n\n          <Col sm={3} style={{ height: height ? height : '', overflow: 'scroll' }}>\n            <ChatSettings \n              creds={this.state.creds} \n              chat={this.state.chats && this.state.chats[this.state.activeChat]} \n            />\n          </Col>\n\n        </Row>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function getChats(props) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/`,\n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {\n        if (response.status === 200) {\n            props.onGetChats && props.onGetChats(response.data)\n        }\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\n\nexport function getMessages(props, chatId) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        { headers: { \n            \"Public-Key\": props.publicKey,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword,\n        }}\n    )\n\n    .then((response) => {\n        if (response.status === 200) {\n            props.onGetMessages && props.onGetMessages(chatId, response.data)\n        }\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Messages Error', error)\n    });\n}","import React from 'react'\n\nimport Socket from './Socket'\nimport ChatUi from './ChatUi'\n\nconst SocketConnector = (props) => {\n    if (props.hideExample) {\n        return <Socket {...props} />\n    } else {\n        return <ChatUi {...props} />\n    }\n    \n}\n\nexport default SocketConnector\n","import React from 'react'\n\nimport SocketConnector from './components'\n\nimport { getChats, newChat, editChat, deleteChat } from './actions/chats'\nimport { addPerson, removePerson } from './actions/people'\nimport { getMessages, sendMessage, editMessage, deleteMessage } from './actions/messages'\n\nconst ChatEngine = (props) => {\n  return <SocketConnector {...props} />\n}\n\nexport {\n  ChatEngine,\n  getChats,\n  newChat,\n  editChat,\n  deleteChat,\n\n  addPerson,\n  removePerson,\n\n  getMessages,\n  sendMessage,\n  editMessage,\n  deleteMessage,\n}","import React from 'react'\n\nimport { ChatEngine } from 'react-chat-engine'\n\nconst users = [\n  {\n    userName: 'John_Doe',\n    userPassword: 'pass1234',\n  },\n  {\n    userName: 'Jane_Smith',\n    userPassword: 'pass1234',\n  },\n  {\n    userName: 'Adam_La_Morre',\n    userPassword: 'pass1234',\n  }\n]\n\nexport function App () {\n  const user = users[Math.floor(Math.random() * users.length)]\n\n  return (\n    <div style={{ width: '66vw',  backgroundColor: '#e6f7ff' }}>\n      <ChatEngine\n        // Creds\n        development\n        publicKey={'1ed59673-1fd6-46ed-9eb9-56239a6a4f82'}\n        userName={user.userName}\n        userPassword={user.userPassword}\n        // Hooks\n        onNewMessage={(chatId, message) => console.log('COME ON')}\n        // Render Custom Components\n        height='66vh'\n      />\n    </div>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}